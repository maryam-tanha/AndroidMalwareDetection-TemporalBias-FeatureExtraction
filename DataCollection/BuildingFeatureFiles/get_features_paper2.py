import csv
import os
import pandas as pd


def gen_csv_header_row(txt_files):
    headers = ['sha256', 'apk_name']
    resource_dir = os.getcwd() + "/resources/"
    for txt_file in txt_files:
        with open(resource_dir + txt_file, 'r') as file:
            headers.extend(file.read().splitlines())
    return headers


def create_hashset_from_file(txt_file):
    hashset = set()
    with open(txt_file, 'r') as file:
        for line in file:
            hashset.add(line.strip())
    return hashset


def create_feature_hashes(parent, apk_folders):
    all_apks_features = []
    for apk_folder in apk_folders:
        feature_files_dir = parent + "/" + apk_folder
        apk_features_array = [apk_folder]
        for feature_file in os.listdir(feature_files_dir):
            if feature_file.endswith(('permissions.txt', 'intent-actions.txt', 'api-calls.txt', 'hw-sw.txt')):
                apk_features_array.append(create_hashset_from_file(feature_files_dir + "/" + feature_file))
        all_apks_features.append(apk_features_array)
    return all_apks_features


def create_rows(main_df, all_apks_features_hashes):
    # main_df header info:
    # sha_256, apk_name, permissions(3 - 149), intent actions (150 - 275), api calls (276 - 381)

    for apk in all_apks_features_hashes:
        apk_row = [0, apk[0]]
        api_call_hashes = apk[1]
        hw_sw_hashes = apk[2]
        intent_action_hashes = apk[3]
        permission_hashes = apk[4]

        for permission in main_df.columns[2:337]:
            if permission in permission_hashes:
                apk_row.append(1)
            else:
                apk_row.append(0)

        for hw_sw in main_df.columns[337:413]:
            if hw_sw in hw_sw_hashes:
                apk_row.append(1)
            else:
                apk_row.append(0)

        for intent_action in main_df.columns[413:627]:
            if intent_action in intent_action_hashes:
                apk_row.append(1)
            else:
                apk_row.append(0)

        for api_call in main_df.columns[627:]:
            if api_call in api_call_hashes:
                apk_row.append(1)
            else:
                apk_row.append(0)
        main_df.loc[len(main_df)] = apk_row


def main():
    # Creating headers for the csv file
    headers_files = ['mobitive_permissions.txt', 'mobitive_hwsw_list.txt', 'mobitive_intents.txt', 'mobitive_api_calls.txt']
    feature_column_names = gen_csv_header_row(headers_files)
    main_df = pd.DataFrame(columns=feature_column_names)
    # Header length = 2 + 335 + 76 + 214 + 2290 = 2917


    # Navigating to the directory with feature files and folders
    # This will be replaced with path to the hard drive with all the apk features
    library_dir = "C:/Users/sjind/ASingh/RESEARCH_ASSISTANT_MATERIAL/GITHUBREPO/FeatureExtraction/MobileDevice" \
                  "/ExtractedFeatures/"
    os.chdir(library_dir)
    parent_dir = os.getcwd()

    # Adding rows to the df
    apk_feature_folders = os.listdir()
    all_apks_features_hashes = create_feature_hashes(parent_dir, apk_feature_folders)
    create_rows(main_df, all_apks_features_hashes)


    # Creating output csv file
    current_file = os.path.abspath(__file__)
    current_directory = os.path.dirname(current_file)
    os.chdir(current_directory)
    main_df.to_csv("output/output_paper2.csv", index=False)


if __name__ == "__main__":
    main()
