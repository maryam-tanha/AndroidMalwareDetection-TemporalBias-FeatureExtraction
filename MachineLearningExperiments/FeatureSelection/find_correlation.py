import pandas as pd
import numpy as np

# Load your dataset
# Replace 'your_dataset.csv' with the actual filename or URL of your dataset
df = pd.read_csv('/Users/khushbeen/PycharmProjects/StaticAndroidMalwareAnalysis/MachineLearningExperiments/FeatureSelection/Resources/qa_dataset.csv')


# Drop the 'sha256' column
df = df.drop(columns=['sha256'])

# Compute the correlation matrix
correlation_matrix = df.corr()

# Set a threshold for correlation
correlation_threshold = 0.9

# Identify and remove highly correlated features
# Create a mask for values above the threshold
correlation_mask = np.abs(correlation_matrix) > correlation_threshold

# Exclude diagonal elements from the mask
correlation_mask &= ~np.eye(correlation_matrix.shape[0], dtype=bool)

# Find the indices of features to be dropped
features_to_drop = set()
for i in range(len(correlation_matrix.columns)):
    for j in range(i):
        if correlation_mask.iloc[i, j]:
            colname = correlation_matrix.columns[i]
            features_to_drop.add(colname)


# Identified 721 features that are highly correlated and can be removed to avoid redundancy
print(len(features_to_drop))
# Drop highly correlated features
df_no_corr = df.drop(columns=features_to_drop)

# Display the features remaining after removing highly correlated features
print("Remaining Features after Correlation Analysis:")
print(df_no_corr.columns)
