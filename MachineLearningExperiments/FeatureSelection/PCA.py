import pandas as pd
from sklearn.decomposition import PCA
from sklearn.model_selection import train_test_split

# Load your dataset
# Replace 'your_dataset.csv' with the actual filename or URL of your dataset
df = pd.read_csv('/Users/khushbeen/PycharmProjects/StaticAndroidMalwareAnalysis/MachineLearningExperiments/FeatureSelection/Resources/qa_dataset.csv')

# Drop the 'sha256' column
df = df.drop(columns=['sha256'])

# Assume 'target' is the column you want to predict
X = df.drop(columns=['Malware'])
y = df['Malware']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)

# Specify the number of components you want to keep (e.g., n_components=100)
n_components = 80

# Initialize PCA with the number of components
pca = PCA(n_components=n_components)

# Fit PCA to the training data and transform the features
X_train_pca = pca.fit_transform(X_train)

# Transform the test data using the same PCA instance
X_test_pca = pca.transform(X_test)

# Display the explained variance ratio for each component
print("Explained Variance Ratio for each Principal Component:")
print(pca.explained_variance_ratio_)

# Display the cumulative explained variance ratio
print("Cumulative Explained Variance Ratio:")
print(sum(pca.explained_variance_ratio_))

# You can access the principal components using pca.components_

# Now X_train_pca and X_test_pca contain the reduced-dimensional data

# If you want to see the reduced features
reduced_features = pd.DataFrame(X_train_pca, columns=[f'PC_{i+1}' for i in range(n_components)])
print("Reduced Features:")
print(reduced_features.head())
