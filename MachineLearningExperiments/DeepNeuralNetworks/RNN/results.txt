Fitting 3 folds for each of 1 candidates, totalling 3 fits
  epoch    train_loss     dur
-------  ------------  ------
      1        [36m0.6522[0m  0.0107
      2        [36m0.5242[0m  0.0051
      3        [36m0.4510[0m  0.0058
      4        [36m0.3938[0m  0.0031
      5        [36m0.3493[0m  0.0035
      6        [36m0.3153[0m  0.0031
      7        [36m0.2899[0m  0.0050
      8        [36m0.2716[0m  0.0051
      9        [36m0.2592[0m  0.0056
     10        [36m0.2512[0m  0.0051
  epoch    train_loss     dur
-------  ------------  ------
      1        [36m0.6966[0m  0.0040
      2        [36m0.5763[0m  0.0035
      3        [36m0.5016[0m  0.0031
      4        [36m0.4435[0m  0.0036
      5        [36m0.3977[0m  0.0040
      6        [36m0.3614[0m  0.0037
      7        [36m0.3326[0m  0.0041
      8        [36m0.3100[0m  0.0031
      9        [36m0.2926[0m  0.0046
     10        [36m0.2796[0m  0.0030
  epoch    train_loss     dur
-------  ------------  ------
      1        [36m0.7060[0m  0.0051
      2        [36m0.5986[0m  0.0046
      3        [36m0.5255[0m  0.0041
      4        [36m0.4675[0m  0.0040
      5        [36m0.4192[0m  0.0052
      6        [36m0.3781[0m  0.0052
      7        [36m0.3433[0m  0.0059
      8        [36m0.3147[0m  0.0041
      9        [36m0.2919[0m  0.0046
     10        [36m0.2744[0m  0.0031
  epoch    train_loss     dur
-------  ------------  ------
      1        [36m0.7235[0m  0.0050
      2        [36m0.5939[0m  0.0050
      3        [36m0.5152[0m  0.0037
      4        [36m0.4534[0m  0.0030
      5        [36m0.4036[0m  0.0041
      6        [36m0.3632[0m  0.0041
      7        [36m0.3309[0m  0.0042
      8        [36m0.3055[0m  0.0038
      9        [36m0.2863[0m  0.0040
     10        [36m0.2724[0m  0.0031
Best parameters:
{'nn__lr': 0.01, 'nn__max_epochs': 10, 'nn__module__hidden_size': 64, 'nn__optimizer': <class 'torch.optim.adam.Adam'>}
Pipeline(steps=[('nn',
                 <class 'skorch.classifier.NeuralNetClassifier'>[initialized](
  module_=SimpleRNN(
    (rnn): RNN(2638, 64, batch_first=True)
    (fc): Linear(in_features=64, out_features=1, bias=True)
  ),
))])
              precision    recall  f1-score   support

         0.0       0.90      1.00      0.95         9
         1.0       1.00      0.00      0.00         1

    accuracy                           0.90        10
   macro avg       0.95      0.50      0.47        10
weighted avg       0.91      0.90      0.85        10

