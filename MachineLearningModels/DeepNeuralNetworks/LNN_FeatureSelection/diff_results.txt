TRAINING SET: Ratio of Benign APKs to Malware APKs:
Malware
1    0.5
0    0.5
Name: proportion, dtype: float64
TEST SET: Ratio of Benign APKs to Malware APKs:
Malware
0    0.9
1    0.1
Name: proportion, dtype: float64
Fitting 3 folds for each of 1 candidates, totalling 3 fits
  epoch    train_loss     dur
-------  ------------  ------
      1        [36m0.6262[0m  0.6111
      2        [36m0.5730[0m  0.5785
      3        [36m0.5302[0m  0.5751
      4        [36m0.5245[0m  0.6004
      5        [36m0.5228[0m  0.5873
      6        [36m0.5222[0m  0.5817
      7        [36m0.5218[0m  0.5670
      8        [36m0.5214[0m  0.5822
      9        [36m0.5210[0m  0.5669
     10        [36m0.5206[0m  0.5679
  epoch    train_loss     dur
-------  ------------  ------
      1        [36m0.6345[0m  0.6016
      2        [36m0.5489[0m  0.5992
      3        [36m0.5222[0m  0.5651
      4        [36m0.5157[0m  0.5872
      5        [36m0.5131[0m  0.6004
      6        [36m0.5122[0m  0.6101
      7        [36m0.5116[0m  0.5987
      8        [36m0.5113[0m  0.5988
      9        0.5115  0.5974
     10        0.5124  0.6003
  epoch    train_loss     dur
-------  ------------  ------
      1        [36m0.6138[0m  0.5524
      2        [36m0.5291[0m  0.5569
      3        [36m0.5192[0m  0.5466
      4        [36m0.5132[0m  0.5567
      5        [36m0.5116[0m  0.5486
      6        [36m0.5110[0m  0.5447
      7        0.5145  0.5431
      8        [36m0.5108[0m  0.5428
      9        0.5110  0.5430
     10        0.5111  0.5500
  epoch    train_loss     dur
-------  ------------  ------
      1        [36m0.6037[0m  0.8934
      2        [36m0.5408[0m  0.9219
      3        [36m0.5207[0m  0.8924
      4        [36m0.5155[0m  0.9520
      5        [36m0.5144[0m  0.9098
      6        [36m0.5137[0m  0.9140
      7        0.5138  0.9307
      8        [36m0.5131[0m  0.9060
      9        [36m0.5123[0m  0.8942
     10        [36m0.5120[0m  0.8919
Best parameters:
{'nn__lr': 0.01, 'nn__max_epochs': 10, 'nn__module__reservoir_size': 100, 'nn__optimizer': <class 'torch.optim.adam.Adam'>}
Pipeline(steps=[('nn',
                 <class 'skorch.classifier.NeuralNetClassifier'>[initialized](
  module_=LNN(
    (W_in): Linear(in_features=263, out_features=100, bias=True)
    (W_res): Linear(in_features=100, out_features=100, bias=True)
    (W_out): Linear(in_features=100, out_features=1, bias=True)
  ),
))])
              precision    recall  f1-score   support

         0.0       1.00      0.43      0.60       900
         1.0       0.16      0.99      0.28       100

    accuracy                           0.49      1000
   macro avg       0.58      0.71      0.44      1000
weighted avg       0.91      0.49      0.57      1000

