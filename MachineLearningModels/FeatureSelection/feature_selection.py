import pandas as pd
from sklearn.feature_selection import SelectKBest, chi2
from sklearn.model_selection import train_test_split

def feature_selection_and_dataframe(input_file_path, target_column, k_features=100, test_size=0.1, random_state=42):
    # Load your dataset
    df = pd.read_csv(input_file_path)

    # Extract the 'sha256' column for inclusion in the final DataFrame
    sha256_column = df['sha256']

    # Drop the 'sha256' and target columns for feature selection
    df_features = df.drop(columns=['sha256', target_column])

    # Assume 'target' is the column you want to predict
    X = df_features
    y = df[target_column]

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)

    # Perform feature selection using chi-squared test
    selector = SelectKBest(chi2, k=k_features)
    X_train_selected = selector.fit_transform(X_train, y_train)

    # Get the indices of the selected features
    selected_indices = selector.get_support(indices=True)

    # Get the names of the selected features
    selected_feature_names = X.columns[selected_indices]

    # Include the 'sha256' column in the selected features
    selected_feature_names = ['sha256'] + list(selected_feature_names)

    # Create a new DataFrame with the selected features
    df_selected_features = df[selected_feature_names]

    return df_selected_features

# Example usage of the function
input_file_path = '/Users/khushbeen/PycharmProjects/StaticAndroidMalwareAnalysis/MachineLearningModels/FeatureSelection/Resources/90_10_dataset.csv'
target_column = 'Malware'
selected_features_df = feature_selection_and_dataframe(input_file_path, target_column)

# Display the new DataFrame with selected features
print(len(selected_features_df))
