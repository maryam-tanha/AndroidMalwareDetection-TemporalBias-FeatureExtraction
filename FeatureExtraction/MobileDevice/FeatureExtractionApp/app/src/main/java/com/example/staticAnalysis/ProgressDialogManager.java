package com.example.staticAnalysis;

import android.app.Activity;
import android.widget.TextView;
import androidx.appcompat.app.AlertDialog;

/**
 * Dialog manager for the AlertDialog to update progress when extracting and sending feature
 * directories.
 */
public class ProgressDialogManager {

    private AlertDialog progressDialog;
    private final Activity activity;

    /**
     * Manages the creation and control of a progress dialog for an Android activity.
     * This class initializes and handles the lifecycle of a progress dialog that can be used
     * to indicate ongoing background tasks when extracting and sending feature directories.
     *
     * @param activity The activity for which the progress dialog is managed.
     */
    public ProgressDialogManager(Activity activity) {
        this.activity = activity;
        createProgressDialog(activity);
    }

    /**
     * Creates a progress dialog associated with the given activity.
     * This method creates a custom progress dialog using a layout resource
     * and sets it as the progress dialog for the specified activity.
     *
     * @param activity The activity for which the progress dialog is created.
     */
    private void createProgressDialog(Activity activity) {
        activity.runOnUiThread(() -> {
            AlertDialog.Builder builder = new AlertDialog.Builder(activity);
            builder.setView(R.layout.dialog_progress)
                    .setCancelable(false);
            progressDialog = builder.create();
        });
    }

    /**
     * Updates the text displayed in the progress dialog, if available.
     * This method checks if the progress dialog exists and then updates
     * the text displayed in it with the specified message.
     *
     * @param message The message to be displayed in the progress dialog.
     */
    private void updateProgressText(String message) {
        if (progressDialog != null) {
            TextView dialogProgressText = progressDialog.findViewById(R.id.dialogProgressText);
            if (dialogProgressText != null) {
                dialogProgressText.setText(message);
            }
        }
    }

    /**
     * Shows a progress dialog with the specified message on the UI thread of the associated activity.
     * If a progress dialog is already visible, this method updates the progress text with the new message.
     *
     * @param message The message to be displayed in the progress dialog.
     */
    public void showProgressDialog(String message) {
        activity.runOnUiThread(() -> {
            if (progressDialog != null && !progressDialog.isShowing()) {
                progressDialog.show();
            }
            updateProgressText(message);
        });
    }

    /**
     * Dismisses the progress dialog if it is currently showing.
     */
    public void dismissProgressDialog() {
        if (progressDialog != null && progressDialog.isShowing()) {
            progressDialog.dismiss();
        }
    }
}
